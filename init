#!/bin/sh

msg () { [ "${quiet}" != "y" ] && echo $@; }
err () { echo "ERROR: $@"; }

msg ":: Begin Initramfs"

/bin/mount -t sysfs none /sys
/bin/mount -t proc  none /proc

CMDLINE=$(/bin/cat /proc/cmdline)

for cmd in $CMDLINE; do
    case "$cmd" in
        *=*) export "${cmd}" ;;
        *) export "${cmd}=y" ;;
    esac
done

if [ "x${disablehooks}" != "x" ]; then
    OLDIFS=$IFS
    IFS=,
    for d in ${disablehooks}; do
        export "${d}=disabled"
    done
    IFS=$OLDIFS
fi

. /config

for m in $MODULES; do
    /bin/modprobe -q $m > /dev/null 2>&1
done

if [ -e "/hooks" ]; then
    for h in $HOOKS; do
        TST=""
        eval "TST=\$${h}"
        if [ "${TST}" != "disabled" ]; then
            run_hook () { msg "$h: no run function defined"; }
            if [ -e "/hooks/$h" ]; then
               . /hooks/$h
               msg ":: Running Hook [${h}]"
               run_hook
            fi
        fi
    done
fi

if [ "${break}" = "y" ]; then
    echo ":: Break requested, type 'exit' to resume operation"
    PS1="ramfs$ " /bin/sh -i
fi

# Optimize fs type loop for mounting rootfs
msg ":: End Initramfs - control passing to kinit"
exec /bin/kinit rootfstype=${FSTYPE} $CMDLINE < /dev/console > /dev/console
